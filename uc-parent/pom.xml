<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.uc</groupId>
	<artifactId>uc-parent</artifactId>
	<version>0.0.6</version>
	<packaging>pom</packaging>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>8</java.version>
		<spring-cloud-alibaba-dependencies.version>2.2.1.RELEASE</spring-cloud-alibaba-dependencies.version>
		<spring-boot-dependencies.version>2.2.8.RELEASE</spring-boot-dependencies.version>
		<spring-cloud-dependencies.version>Hoxton.SR6</spring-cloud-dependencies.version>
		<commons-collections4.version>4.4</commons-collections4.version>
		<fastjson.version>1.2.70</fastjson.version>
		<swagger.version>2.9.2</swagger.version>
		<swagger.ui.version>1.8.7</swagger.ui.version>
		<swagger.mg.ui.version>1.0.6</swagger.mg.ui.version>
		<swagger.butler.version>2.0.1</swagger.butler.version>
		<knife4j.version>2.0.4</knife4j.version>
		<jjwt.version>0.9.1</jjwt.version>
		<druid-starter>1.1.22</druid-starter>
		<jasypt.version>1.14</jasypt.version>
		<sharding-sphere.version>3.1.0</sharding-sphere.version>
		<security-oauth2.version>2.3.8.RELEASE</security-oauth2.version>
		<security-jwt.version>1.1.0.RELEASE</security-jwt.version>
		<redisson-starter.version>3.11.5</redisson-starter.version>
		<easyCaptcha.version>1.6.2</easyCaptcha.version>
		<hutool.version>5.1.4</hutool.version>
		<mybatis-plus-boot-starter.version>3.3.1</mybatis-plus-boot-starter.version>
		<shardingsphere.version>4.1.1</shardingsphere.version>
		<aliyun-sdk-oss>3.8.1</aliyun-sdk-oss>
		<qiniu-java-sdk>7.2.28</qiniu-java-sdk>
		<easypoi.version>4.1.3</easypoi.version>
		<poi.version>4.1.1</poi.version>
		<spring-boot-admin.version>2.2.3</spring-boot-admin.version>
		<velocity.version>1.7</velocity.version>
		<commons-configuration2.version>2.7</commons-configuration2.version>
		<txlcn.version>5.0.2.RELEASE</txlcn.version>
		<fastdfs-client.version>1.27.2</fastdfs-client.version>
		<userAgent.version>1.21</userAgent.version>
		<transmittable.version>2.11.5</transmittable.version>
		<banner.version>1.0.2</banner.version>
		<commons-beanutils.version>1.9.4</commons-beanutils.version>
		<spring-social-security.version>1.1.6.RELEASE</spring-social-security.version>
		<commons-io.version>2.6</commons-io.version>
		<logstash-logback-encoder.version>6.3</logstash-logback-encoder.version>
		<servlet-api.version>4.0.1</servlet-api.version>
		<spring-data-elasticsearch.version>3.2.7.RELEASE</spring-data-elasticsearch.version>
		<elasticsearch.version>7.8.0</elasticsearch.version>
		<sqlserver.version>4.0</sqlserver.version>
		<docker-maven-plugin.version>1.2.2</docker-maven-plugin.version>
		<maven-resources-plugin.version>2.6</maven-resources-plugin.version>
		<sonar.exclusions>zlt-job/**/*, zlt-register/**/*, zlt-web/**/*</sonar.exclusions>
		<docker.baseImage>openjdk:8-jre-alpine</docker.baseImage>
		<docker.volumes>/tmp</docker.volumes>
		<docker.image.prefix>hub.zlt.com:8080/microservices-platform</docker.image.prefix>
		<docker.java.security.egd>-Djava.security.egd=file:/dev/./urandom</docker.java.security.egd>
		<docker.java.opts>-Xms128m -Xmx128m</docker.java.opts>
		<ons-client.version>1.8.7.Final</ons-client.version>
		<rocketmq.version>2.1.1</rocketmq.version>
		<kafka.version>2.3.10.RELEASE</kafka.version>
		<code-generator.version>1.3.7</code-generator.version>
		<mq-http.version>1.0.1</mq-http.version>
		<hibernate-validator.version>6.1.5.Final</hibernate-validator.version>
		<mybatis.version>2.1.5</mybatis.version>
	</properties>

	<dependencies>
		<!-- nacos注册发现 -->
		<dependency>
			<groupId>com.alibaba.cloud</groupId>
			<artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
		</dependency>

		<!-- nacos 配置中心 -->
		<dependency>
			<groupId>com.alibaba.cloud</groupId>
			<artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
		</dependency>

		<!-- feign -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>

		<!-- starter -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<!-- mybatis -->
		<dependency>
			<groupId>tk.mybatis</groupId>
			<artifactId>mapper-spring-boot-starter</artifactId>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>tk.mybatis</groupId>
				<artifactId>mapper-spring-boot-starter</artifactId>
				<version>${mybatis.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>${commons-collections4.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons-beanutils.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt</artifactId>
				<version>${jjwt.version}</version>
			</dependency>
			<!-- druid 官方 starter -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid-spring-boot-starter</artifactId>
				<version>${druid-starter}</version>
			</dependency>
			<!-- mybatis-plus start -->
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-boot-starter</artifactId>
				<version>${mybatis-plus-boot-starter.version}</version>
			</dependency>
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-extension</artifactId>
				<version>${mybatis-plus-boot-starter.version}</version>
			</dependency>
			<!-- 加入spring security spring security oauth2的处理 -->
			<dependency>
				<groupId>org.springframework.security.oauth</groupId>
				<artifactId>spring-security-oauth2</artifactId>
				<version>${security-oauth2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-jwt</artifactId>
				<version>${security-jwt.version}</version>
			</dependency>
			<!-- 在Redis基础上的一个Java实用工具包 -->
			<dependency>
				<groupId>org.redisson</groupId>
				<artifactId>redisson-spring-boot-starter</artifactId>
				<version>${redisson-starter.version}</version>
			</dependency>
			<!-- swagger -->
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${swagger.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-bean-validators</artifactId>
				<version>${swagger.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${swagger.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.xiaoymin</groupId>
				<artifactId>swagger-bootstrap-ui</artifactId>
				<version>${swagger.ui.version}</version>
			</dependency>
			<dependency>
				<groupId>com.zyplayer</groupId>
				<artifactId>swagger-mg-ui</artifactId>
				<version>${swagger.mg.ui.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.zlt2000</groupId>
				<artifactId>swagger-butler-core</artifactId>
				<version>${swagger.butler.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.xiaoymin</groupId>
				<artifactId>knife4j-spring-boot-starter</artifactId>
				<version>${knife4j.version}</version>
			</dependency>
			<!-- 验证码生成工具 -->
			<dependency>
				<groupId>com.github.whvcse</groupId>
				<artifactId>easy-captcha</artifactId>
				<version>${easyCaptcha.version}</version>
			</dependency>
			<!-- hutool java工具类库 -->
			<dependency>
				<groupId>cn.hutool</groupId>
				<artifactId>hutool-all</artifactId>
				<version>${hutool.version}</version>
			</dependency>
			<dependency>
				<groupId>com.aliyun.oss</groupId>
				<artifactId>aliyun-sdk-oss</artifactId>
				<version>${aliyun-sdk-oss}</version>
			</dependency>
			<!-- 七牛依赖 -->
			<dependency>
				<groupId>com.qiniu</groupId>
				<artifactId>qiniu-java-sdk</artifactId>
				<version>${qiniu-java-sdk}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>${poi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${poi.version}</version>
			</dependency>
			<!-- easypoi -->
			<dependency>
				<groupId>cn.afterturn</groupId>
				<artifactId>easypoi-base</artifactId>
				<version>${easypoi.version}</version>
			</dependency>
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus</artifactId>
				<version>${mybatis-plus-boot-starter.version}</version>
			</dependency>
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-starter-server</artifactId>
				<version>${spring-boot-admin.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity</artifactId>
				<version>${velocity.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-configuration2</artifactId>
				<version>${commons-configuration2.version}</version>
			</dependency>
			<dependency>
				<groupId>com.codingapi.txlcn</groupId>
				<artifactId>txlcn-tm</artifactId>
				<version>${txlcn.version}</version>
			</dependency>
			<dependency>
				<groupId>com.codingapi.txlcn</groupId>
				<artifactId>txlcn-tc</artifactId>
				<version>${txlcn.version}</version>
			</dependency>
			<dependency>
				<groupId>com.codingapi.txlcn</groupId>
				<artifactId>txlcn-txmsg-netty</artifactId>
				<version>${txlcn.version}</version>
			</dependency>
			<dependency>
				<groupId>io.shardingsphere</groupId>
				<artifactId>sharding-jdbc-spring-boot-starter</artifactId>
				<version>${sharding-sphere.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.tobato</groupId>
				<artifactId>fastdfs-client</artifactId>
				<version>${fastdfs-client.version}</version>
			</dependency>
			<dependency>
				<groupId>eu.bitwalker</groupId>
				<artifactId>UserAgentUtils</artifactId>
				<version>${userAgent.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>transmittable-thread-local</artifactId>
				<version>${transmittable.version}</version>
			</dependency>
			<dependency>
				<groupId>com.nepxion</groupId>
				<artifactId>banner</artifactId>
				<version>${banner.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.social</groupId>
				<artifactId>spring-social-security</artifactId>
				<version>${spring-social-security.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<dependency>
				<groupId>net.logstash.logback</groupId>
				<artifactId>logstash-logback-encoder</artifactId>
				<version>${logstash-logback-encoder.version}</version>
			</dependency>
			<!-- sqlserver链接依赖 -->
			<dependency>
				<groupId>com.microsoft.sqlserver</groupId>
				<artifactId>sqljdbc4</artifactId>
				<version>${sqlserver.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${servlet-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-elasticsearch</artifactId>
				<version>${spring-data-elasticsearch.version}</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch.client</groupId>
				<artifactId>elasticsearch-rest-high-level-client</artifactId>
				<version>${elasticsearch.version}</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch.client</groupId>
				<artifactId>elasticsearch-rest-client</artifactId>
				<version>${elasticsearch.version}</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch</groupId>
				<artifactId>elasticsearch</artifactId>
				<version>${elasticsearch.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-alibaba-dependencies</artifactId>
				<version>${spring-cloud-alibaba-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.aliyun.openservices</groupId>
				<artifactId>ons-client</artifactId>
				<version>${ons-client.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.rocketmq</groupId>
				<artifactId>rocketmq-spring-boot-starter</artifactId>
				<version>${rocketmq.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.kafka</groupId>
				<artifactId>spring-kafka</artifactId>
				<version>${kafka.version}</version>
			</dependency>
			<dependency>
				<groupId>com.aliyun.mq</groupId>
				<artifactId>mq-http-sdk</artifactId>
				<version>${mq-http.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate.validator</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-validator.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<distributionManagement>
		<repository>
			<id>maven-releases</id>
			<url>http://nexus.bilinl.com/repository/maven-releases/</url>
		</repository>
	</distributionManagement>

	<repositories>
		<repository>
			<!--远程仓库唯一标识 -->
			<id>maven-releases</id>
			<!--远程仓库名称 -->
			<name>maven-releases</name>
			<!--如何处理远程仓库里发布版本的下载 -->
			<releases>
				<!--true或者false表示该仓库是否为下载某种类型构件（发布版，快照版）开启。 -->
				<enabled>true</enabled>
				<!--该元素指定更新发生的频率。Maven会比较本地POM和远程POM的时间戳。这里的选项是：always（一直），daily（默认，每日），interval：X（这里X是以分钟为单位的时间间隔），或者never（从不）。 -->
				<updatePolicy>always</updatePolicy>
				<!--当Maven验证构件校验文件失败时该怎么做-ignore（忽略），fail（失败），或者warn（警告）。 -->
				<checksumPolicy>warn</checksumPolicy>
			</releases>
			<!--如何处理远程仓库里快照版本的下载。有了releases和snapshots这两组配置，POM就可以在每个单独的仓库中，为每种类型的构件采取不同的策略。例如，可能有人会决定只为开发目的开启对快照版本下载的支持。参见repositories/repository/releases元素 -->
			<snapshots>
				<!--true或者false表示该仓库是否为下载某种类型构件（发布版，快照版）开启。 -->
				<enabled>true</enabled>
				<!--该元素指定更新发生的频率。Maven会比较本地POM和远程POM的时间戳。这里的选项是：always（一直），daily（默认，每日），interval：X（这里X是以分钟为单位的时间间隔），或者never（从不）。 -->
				<updatePolicy>always</updatePolicy>
				<!--当Maven验证构件校验文件失败时该怎么做-ignore（忽略），fail（失败），或者warn（警告）。 -->
				<checksumPolicy>warn</checksumPolicy>
			</snapshots>
			<!--远程仓库URL，按protocol://hostname/path形式 -->
			<url>http://nexus.bilinl.com/repository/maven-releases/</url>
			<!--用于定位和排序构件的仓库布局类型-可以是default（默认）或者legacy（遗留）。Maven 2为其仓库提供了一个默认的布局；然而，Maven 
				1.x有一种不同的布局。我们可以使用该元素指定布局是default（默认）还是legacy（遗留）。 -->
			<layout>default</layout>
		</repository>

	</repositories>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot-dependencies.version}</version>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker-maven-plugin.version}</version>
				</plugin>
				<!-- resource插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
					<configuration>
						<encoding>UTF-8</encoding>
						<useDefaultDelimiters>true</useDefaultDelimiters>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.mybatis.generator</groupId>
					<artifactId>mybatis-generator-maven-plugin</artifactId>
					<version>${code-generator.version}</version>
					<configuration>
						<configurationFile>${basedir}/src/main/resources/mybatis/generatorConfig.xml
						</configurationFile>
						<overwrite>true</overwrite>
						<verbose>true</verbose>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>